# Security Onion - SOC Analyst Investigation Lab

## üîé Overview

This lab demonstrates the detection, investigation, and analysis of suspicious network activity using Security Onion. Logs were collected and reviewed using Kibana, Sguil, and Wireshark interfaces. The scenario simulated a malware infection and exfiltration attempt from a compromised host to an external malicious server. The objective was to identify the attack, track the attacker, and understand how the exploit was executed.

---

## üß† Objectives

- Analyze alerts triggered by Snort/Suricata NIDS sensors
- Use Kibana to visualize Zeek/IDS data
- Investigate detailed packet data using Sguil and Wireshark
- Identify indicators of compromise (IOCs)
- Follow the attacker‚Äôs activity end to end

---

## üåê Dashboard Overview

### üì∏ Screenshot 2025-04-06 224251.png
NIDS dashboard showing 147 alerts, with 142 classified as **Trojan activity**.

---

### üì∏ Screenshot 2025-04-06 224305.png
Alerts over time broken down by category, showing consistent detections during the attack window.

---

### üì∏ Screenshot 2025-04-06 223612.png
The ‚ÄúOverview‚Äù dashboard displaying a breakdown of 1910 logs across Zeek and IDS sources.

---

## ‚ö†Ô∏è Alert Trigger and Initial Indicators

### üì∏ Screenshot 2025-04-06 223650.png
A key alert from the RIG Exploit Kit targeting Windows XP/Vista hosts. The alert shows a malicious GET request.

---

### üì∏ Screenshot 2025-04-06 225820.png
Alert in **capME** showing detected gzip encoding and decoded payload that includes a suspicious domain.

---

## üß¨ Payload and Exploit Chain

### üì∏ Screenshot 2025-04-06 220639.png
Decoded packet revealing an iframe loading a suspicious ad/malvertising site.

---

### üì∏ Screenshot 2025-04-06 220347.png
JavaScript content with obfuscated browser fingerprinting and redirection logic.

---

## üß™ File Capture and Hashing

### üì∏ Screenshot 2025-04-06 221210.png
Listing and identifying suspicious payload dropped as **SeaMonkey.105qj67.406x7d8b3**.

---

### üì∏ Screenshot 2025-04-06 221948.png
Calculating SHA1 hash of the suspicious SeaMonkey payload for further IOC analysis.

---

## üßµ TCP Stream Analysis

### üì∏ Screenshot 2025-04-06 234640.png
Wireshark output following TCP stream of data exfiltration to IP **209.165.200.235**.

---

### üì∏ Screenshot 2025-04-07 001713.png
Additional TCP stream analysis revealing `uid=0(root)` and system compromise commands.

---

### üì∏ Screenshot 2025-04-07 001907.png
Payload content showing malicious commands being written to `/etc/shadow` ‚Äî clear sign of privilege escalation and password file tampering.

---

## üìä Final Alert Summary in Kibana

### üì∏ Screenshot 2025-04-06 224305.png
Overview of alert classifications shows clear indicators of Trojan behavior and policy violations.

---

## ‚úÖ Conclusion

This investigation demonstrated a complete workflow for SOC-level incident detection and response using open-source tools. We successfully identified a drive-by exploit via malvertising, a Trojan dropper, and credential harvesting activities.

> **Key Takeaways**:
> - Combining multiple tools like Kibana, Sguil, Zeek, and Wireshark provides rich, layered visibility.
> - Even small artifacts like iframe redirects or gzip payloads can reveal deep compromise chains.
> - Manual TCP stream analysis is essential for confirming attacker actions and uncovering post-exploitation behavior.

---

## üóÉÔ∏è Files Used

- Screenshot 2025-04-06 224251.png
- Screenshot 2025-04-06 224305.png
- Screenshot 2025-04-06 223612.png
- Screenshot 2025-04-06 223650.png
- Screenshot 2025-04-06 225820.png
- Screenshot 2025-04-06 220639.png
- Screenshot 2025-04-06 220347.png
- Screenshot 2025-04-06 221210.png
- Screenshot 2025-04-06 221948.png
- Screenshot 2025-04-06 234640.png
- Screenshot 2025-04-07 001713.png
- Screenshot 2025-04-07 001907.png

